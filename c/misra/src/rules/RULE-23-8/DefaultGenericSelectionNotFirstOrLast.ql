/**
 * @id c/misra/default-generic-selection-not-first-or-last
 * @name RULE-23-8: A default association shall appear as either the first or the last association of a generic
 * @description A default association shall appear as either the first or the last association of a
 *              generic selection.
 * @kind problem
 * @precision very-high
 * @problem.severity warning
 * @tags external/misra/id/rule-23-8
 *       maintainability
 *       external/misra/c/2012/amendment3
 *       external/misra/obligation/required
 */

import cpp
import codingstandards.c.misra
import codingstandards.cpp.alertreporting.DeduplicateMacroResults

class GenericWithMisplacedDefault extends C11GenericExpr {
  int defaultIdx;

  GenericWithMisplacedDefault() {
    getAssociationType(defaultIdx) instanceof VoidType and
    not defaultIdx = 0 and
    not defaultIdx = max(int i | exists(getAssociationType(i)))
  }

  int getDefaultIdx() { result = defaultIdx }
}

module GenericWithMisplacedDefaultConfig implements
  DeduplicateMacroConfigSig<GenericWithMisplacedDefault>
{
  string describe(GenericWithMisplacedDefault e) {
    exists(int i | i = e.getDefaultIdx() + 1 |
      i = 1 and result = "1st"
      or
      i = 2 and result = "2nd"
      or
      i = 3 and result = "3rd"
      or
      i > 3 and result = i.toString() + "th"
    )
  }
}

import GenericWithMisplacedDefaultConfig

module GenericMisplacedDefaultReportConfig implements
  MacroReportConfigSig<GenericWithMisplacedDefault>
{
  /* Create a message to describe this macro, with a string describing its `ResultElement`. */
  bindingset[description]
  string getMessageSameResultInAllExpansions(Macro m, string description) {
    result =
      "Generic macro " + m.getName() + " has default as " + description +
        " association, which is not first or last."
  }

  /* Create a message to describe this macro, using '$@' to describe an example `ResultElement`. */
  string getMessageVariedResultInAllExpansions(Macro m) {
    result =
      "Generic macro " + m.getName() +
        " has a default association which is not first or last, for example $@."
  }

  /**
   * Create a message to describe this macro expansion which produces a `ResultElement`, using '$@'
   * to describe the relevant macro.
   */
  string getMessageResultInIsolatedExpansion(GenericWithMisplacedDefault element) {
    result =
      "Generic macro $@, in this expansion, has default as " + describe(element) +
        " association, which is not first or last."
  }

  /**
   * Create a message to describe a `ResultElement` which is not generated by a macro expansion.
   */
  string getMessageNotInMacro(GenericWithMisplacedDefault element, Locatable optLoc1, string optStr1) {
    result =
      "Generic has default as " + describe(element) + " association, which is not first or last." and
    optLoc1 = element and
    optStr1 = ""
  }
}

import DeduplicateMacroResults<GenericWithMisplacedDefault, GenericWithMisplacedDefaultConfig> as Deduplicate
import Deduplicate::Report<GenericMisplacedDefaultReportConfig> as Report

from Report::ReportResult res
where
  not isExcluded(res.getPrimaryElement(),
    GenericsPackage::defaultGenericSelectionNotFirstOrLastQuery())
select res.getPrimaryElement(), res.getMessage(), res.getOptionalPlaceholderLocatable(),
  res.getOptionalPlaceholderMessage()
