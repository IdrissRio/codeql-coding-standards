//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype ImportMisra23Query =
  TSectionsOfCodeShouldNotBeCommentedOutQuery() or
  TOneDefinitionRuleViolatedQuery() or
  TVariableDeclaredInInnerScopeHidesOuterScopeQuery() or
  TObjectAccessedBeforeLifetimeMisraQuery() or
  TObjectAccessedAfterLifetimeMisraQuery() or
  TCastRemovesConstOrVolatileFromPointerOrReferenceQuery() or
  TIfElseIfEndConditionQuery() or
  TGotoShallJumpToLabelDeclaredLaterInTheFunctionQuery() or
  TFunctionDeclaredWithTheNoreturnAttributeReturnQuery() or
  TNonVoidFunctionShallReturnAValueOnAllPathsQuery() or
  TDeclarationOfAnObjectIndirectionsLevelQuery() or
  THandlersReferToNonStaticMembersFromTheirClassQuery() or
  TIncludeDirectivesPrecededByPreprocessorDirectivesQuery() or
  TIdentifiersUsedInTheControllingExpressionOfQuery() or
  TCharsThatShouldNotOccurInHeaderFileNameQuery() or
  TAndPreprocessorOperatorsShouldNotBeUsedQuery() or
  TTokensThatLookLikeDirectivesInAMacroArgumentQuery() or
  TPointerToAnIncompleteClassTypeDeletedQuery() or
  TPointersReturnedByLocaleFunctionsMustBeUsedAsConstQuery() or
  TCallToSetlocaleInvalidatesOldPointersMisraQuery() or
  TCallToSetlocaleInvalidatesOldPointersWarnMisraQuery() or
  TObjectUsedWhileInPotentiallyMovedFromStateQuery() or
  TReadsAndWritesOnStreamNotSeparatedByPositioningQuery()

predicate isImportMisra23QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `sectionsOfCodeShouldNotBeCommentedOut` query
    ImportMisra23Package::sectionsOfCodeShouldNotBeCommentedOutQuery() and
  queryId =
    // `@id` for the `sectionsOfCodeShouldNotBeCommentedOut` query
    "cpp/misra/sections-of-code-should-not-be-commented-out" and
  ruleId = "DIR-5-7-2" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `oneDefinitionRuleViolated` query
    ImportMisra23Package::oneDefinitionRuleViolatedQuery() and
  queryId =
    // `@id` for the `oneDefinitionRuleViolated` query
    "cpp/misra/one-definition-rule-violated" and
  ruleId = "RULE-6-2-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `variableDeclaredInInnerScopeHidesOuterScope` query
    ImportMisra23Package::variableDeclaredInInnerScopeHidesOuterScopeQuery() and
  queryId =
    // `@id` for the `variableDeclaredInInnerScopeHidesOuterScope` query
    "cpp/misra/variable-declared-in-inner-scope-hides-outer-scope" and
  ruleId = "RULE-6-4-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `objectAccessedBeforeLifetimeMisra` query
    ImportMisra23Package::objectAccessedBeforeLifetimeMisraQuery() and
  queryId =
    // `@id` for the `objectAccessedBeforeLifetimeMisra` query
    "cpp/misra/object-accessed-before-lifetime-misra" and
  ruleId = "RULE-6-8-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `objectAccessedAfterLifetimeMisra` query
    ImportMisra23Package::objectAccessedAfterLifetimeMisraQuery() and
  queryId =
    // `@id` for the `objectAccessedAfterLifetimeMisra` query
    "cpp/misra/object-accessed-after-lifetime-misra" and
  ruleId = "RULE-6-8-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `castRemovesConstOrVolatileFromPointerOrReference` query
    ImportMisra23Package::castRemovesConstOrVolatileFromPointerOrReferenceQuery() and
  queryId =
    // `@id` for the `castRemovesConstOrVolatileFromPointerOrReference` query
    "cpp/misra/cast-removes-const-or-volatile-from-pointer-or-reference" and
  ruleId = "RULE-8-2-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `ifElseIfEndCondition` query
    ImportMisra23Package::ifElseIfEndConditionQuery() and
  queryId =
    // `@id` for the `ifElseIfEndCondition` query
    "cpp/misra/if-else-if-end-condition" and
  ruleId = "RULE-9-4-1" and
  category = "required"
  or
  query =
    // `Query` instance for the `gotoShallJumpToLabelDeclaredLaterInTheFunction` query
    ImportMisra23Package::gotoShallJumpToLabelDeclaredLaterInTheFunctionQuery() and
  queryId =
    // `@id` for the `gotoShallJumpToLabelDeclaredLaterInTheFunction` query
    "cpp/misra/goto-shall-jump-to-label-declared-later-in-the-function" and
  ruleId = "RULE-9-6-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `functionDeclaredWithTheNoreturnAttributeReturn` query
    ImportMisra23Package::functionDeclaredWithTheNoreturnAttributeReturnQuery() and
  queryId =
    // `@id` for the `functionDeclaredWithTheNoreturnAttributeReturn` query
    "cpp/misra/function-declared-with-the-noreturn-attribute-return" and
  ruleId = "RULE-9-6-4" and
  category = "required"
  or
  query =
    // `Query` instance for the `nonVoidFunctionShallReturnAValueOnAllPaths` query
    ImportMisra23Package::nonVoidFunctionShallReturnAValueOnAllPathsQuery() and
  queryId =
    // `@id` for the `nonVoidFunctionShallReturnAValueOnAllPaths` query
    "cpp/misra/non-void-function-shall-return-a-value-on-all-paths" and
  ruleId = "RULE-9-6-5" and
  category = "required"
  or
  query =
    // `Query` instance for the `declarationOfAnObjectIndirectionsLevel` query
    ImportMisra23Package::declarationOfAnObjectIndirectionsLevelQuery() and
  queryId =
    // `@id` for the `declarationOfAnObjectIndirectionsLevel` query
    "cpp/misra/declaration-of-an-object-indirections-level" and
  ruleId = "RULE-11-3-2" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `handlersReferToNonStaticMembersFromTheirClass` query
    ImportMisra23Package::handlersReferToNonStaticMembersFromTheirClassQuery() and
  queryId =
    // `@id` for the `handlersReferToNonStaticMembersFromTheirClass` query
    "cpp/misra/handlers-refer-to-non-static-members-from-their-class" and
  ruleId = "RULE-18-3-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `includeDirectivesPrecededByPreprocessorDirectives` query
    ImportMisra23Package::includeDirectivesPrecededByPreprocessorDirectivesQuery() and
  queryId =
    // `@id` for the `includeDirectivesPrecededByPreprocessorDirectives` query
    "cpp/misra/include-directives-preceded-by-preprocessor-directives" and
  ruleId = "RULE-19-0-3" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `identifiersUsedInTheControllingExpressionOf` query
    ImportMisra23Package::identifiersUsedInTheControllingExpressionOfQuery() and
  queryId =
    // `@id` for the `identifiersUsedInTheControllingExpressionOf` query
    "cpp/misra/identifiers-used-in-the-controlling-expression-of" and
  ruleId = "RULE-19-1-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `charsThatShouldNotOccurInHeaderFileName` query
    ImportMisra23Package::charsThatShouldNotOccurInHeaderFileNameQuery() and
  queryId =
    // `@id` for the `charsThatShouldNotOccurInHeaderFileName` query
    "cpp/misra/chars-that-should-not-occur-in-header-file-name" and
  ruleId = "RULE-19-2-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `andPreprocessorOperatorsShouldNotBeUsed` query
    ImportMisra23Package::andPreprocessorOperatorsShouldNotBeUsedQuery() and
  queryId =
    // `@id` for the `andPreprocessorOperatorsShouldNotBeUsed` query
    "cpp/misra/and-preprocessor-operators-should-not-be-used" and
  ruleId = "RULE-19-3-1" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `tokensThatLookLikeDirectivesInAMacroArgument` query
    ImportMisra23Package::tokensThatLookLikeDirectivesInAMacroArgumentQuery() and
  queryId =
    // `@id` for the `tokensThatLookLikeDirectivesInAMacroArgument` query
    "cpp/misra/tokens-that-look-like-directives-in-a-macro-argument" and
  ruleId = "RULE-19-3-5" and
  category = "required"
  or
  query =
    // `Query` instance for the `pointerToAnIncompleteClassTypeDeleted` query
    ImportMisra23Package::pointerToAnIncompleteClassTypeDeletedQuery() and
  queryId =
    // `@id` for the `pointerToAnIncompleteClassTypeDeleted` query
    "cpp/misra/pointer-to-an-incomplete-class-type-deleted" and
  ruleId = "RULE-21-6-5" and
  category = "required"
  or
  query =
    // `Query` instance for the `pointersReturnedByLocaleFunctionsMustBeUsedAsConst` query
    ImportMisra23Package::pointersReturnedByLocaleFunctionsMustBeUsedAsConstQuery() and
  queryId =
    // `@id` for the `pointersReturnedByLocaleFunctionsMustBeUsedAsConst` query
    "cpp/misra/pointers-returned-by-locale-functions-must-be-used-as-const" and
  ruleId = "RULE-25-5-2" and
  category = "mandatory"
  or
  query =
    // `Query` instance for the `callToSetlocaleInvalidatesOldPointersMisra` query
    ImportMisra23Package::callToSetlocaleInvalidatesOldPointersMisraQuery() and
  queryId =
    // `@id` for the `callToSetlocaleInvalidatesOldPointersMisra` query
    "cpp/misra/call-to-setlocale-invalidates-old-pointers-misra" and
  ruleId = "RULE-25-5-3" and
  category = "mandatory"
  or
  query =
    // `Query` instance for the `callToSetlocaleInvalidatesOldPointersWarnMisra` query
    ImportMisra23Package::callToSetlocaleInvalidatesOldPointersWarnMisraQuery() and
  queryId =
    // `@id` for the `callToSetlocaleInvalidatesOldPointersWarnMisra` query
    "cpp/misra/call-to-setlocale-invalidates-old-pointers-warn-misra" and
  ruleId = "RULE-25-5-3" and
  category = "mandatory"
  or
  query =
    // `Query` instance for the `objectUsedWhileInPotentiallyMovedFromState` query
    ImportMisra23Package::objectUsedWhileInPotentiallyMovedFromStateQuery() and
  queryId =
    // `@id` for the `objectUsedWhileInPotentiallyMovedFromState` query
    "cpp/misra/object-used-while-in-potentially-moved-from-state" and
  ruleId = "RULE-28-6-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `readsAndWritesOnStreamNotSeparatedByPositioning` query
    ImportMisra23Package::readsAndWritesOnStreamNotSeparatedByPositioningQuery() and
  queryId =
    // `@id` for the `readsAndWritesOnStreamNotSeparatedByPositioning` query
    "cpp/misra/reads-and-writes-on-stream-not-separated-by-positioning" and
  ruleId = "RULE-30-0-2" and
  category = "required"
}

module ImportMisra23Package {
  Query sectionsOfCodeShouldNotBeCommentedOutQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `sectionsOfCodeShouldNotBeCommentedOut` query
      TQueryCPP(TImportMisra23PackageQuery(TSectionsOfCodeShouldNotBeCommentedOutQuery()))
  }

  Query oneDefinitionRuleViolatedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `oneDefinitionRuleViolated` query
      TQueryCPP(TImportMisra23PackageQuery(TOneDefinitionRuleViolatedQuery()))
  }

  Query variableDeclaredInInnerScopeHidesOuterScopeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `variableDeclaredInInnerScopeHidesOuterScope` query
      TQueryCPP(TImportMisra23PackageQuery(TVariableDeclaredInInnerScopeHidesOuterScopeQuery()))
  }

  Query objectAccessedBeforeLifetimeMisraQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `objectAccessedBeforeLifetimeMisra` query
      TQueryCPP(TImportMisra23PackageQuery(TObjectAccessedBeforeLifetimeMisraQuery()))
  }

  Query objectAccessedAfterLifetimeMisraQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `objectAccessedAfterLifetimeMisra` query
      TQueryCPP(TImportMisra23PackageQuery(TObjectAccessedAfterLifetimeMisraQuery()))
  }

  Query castRemovesConstOrVolatileFromPointerOrReferenceQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `castRemovesConstOrVolatileFromPointerOrReference` query
      TQueryCPP(TImportMisra23PackageQuery(TCastRemovesConstOrVolatileFromPointerOrReferenceQuery()))
  }

  Query ifElseIfEndConditionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `ifElseIfEndCondition` query
      TQueryCPP(TImportMisra23PackageQuery(TIfElseIfEndConditionQuery()))
  }

  Query gotoShallJumpToLabelDeclaredLaterInTheFunctionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `gotoShallJumpToLabelDeclaredLaterInTheFunction` query
      TQueryCPP(TImportMisra23PackageQuery(TGotoShallJumpToLabelDeclaredLaterInTheFunctionQuery()))
  }

  Query functionDeclaredWithTheNoreturnAttributeReturnQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `functionDeclaredWithTheNoreturnAttributeReturn` query
      TQueryCPP(TImportMisra23PackageQuery(TFunctionDeclaredWithTheNoreturnAttributeReturnQuery()))
  }

  Query nonVoidFunctionShallReturnAValueOnAllPathsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonVoidFunctionShallReturnAValueOnAllPaths` query
      TQueryCPP(TImportMisra23PackageQuery(TNonVoidFunctionShallReturnAValueOnAllPathsQuery()))
  }

  Query declarationOfAnObjectIndirectionsLevelQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `declarationOfAnObjectIndirectionsLevel` query
      TQueryCPP(TImportMisra23PackageQuery(TDeclarationOfAnObjectIndirectionsLevelQuery()))
  }

  Query handlersReferToNonStaticMembersFromTheirClassQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `handlersReferToNonStaticMembersFromTheirClass` query
      TQueryCPP(TImportMisra23PackageQuery(THandlersReferToNonStaticMembersFromTheirClassQuery()))
  }

  Query includeDirectivesPrecededByPreprocessorDirectivesQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `includeDirectivesPrecededByPreprocessorDirectives` query
      TQueryCPP(TImportMisra23PackageQuery(TIncludeDirectivesPrecededByPreprocessorDirectivesQuery()))
  }

  Query identifiersUsedInTheControllingExpressionOfQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `identifiersUsedInTheControllingExpressionOf` query
      TQueryCPP(TImportMisra23PackageQuery(TIdentifiersUsedInTheControllingExpressionOfQuery()))
  }

  Query charsThatShouldNotOccurInHeaderFileNameQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `charsThatShouldNotOccurInHeaderFileName` query
      TQueryCPP(TImportMisra23PackageQuery(TCharsThatShouldNotOccurInHeaderFileNameQuery()))
  }

  Query andPreprocessorOperatorsShouldNotBeUsedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `andPreprocessorOperatorsShouldNotBeUsed` query
      TQueryCPP(TImportMisra23PackageQuery(TAndPreprocessorOperatorsShouldNotBeUsedQuery()))
  }

  Query tokensThatLookLikeDirectivesInAMacroArgumentQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `tokensThatLookLikeDirectivesInAMacroArgument` query
      TQueryCPP(TImportMisra23PackageQuery(TTokensThatLookLikeDirectivesInAMacroArgumentQuery()))
  }

  Query pointerToAnIncompleteClassTypeDeletedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `pointerToAnIncompleteClassTypeDeleted` query
      TQueryCPP(TImportMisra23PackageQuery(TPointerToAnIncompleteClassTypeDeletedQuery()))
  }

  Query pointersReturnedByLocaleFunctionsMustBeUsedAsConstQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `pointersReturnedByLocaleFunctionsMustBeUsedAsConst` query
      TQueryCPP(TImportMisra23PackageQuery(TPointersReturnedByLocaleFunctionsMustBeUsedAsConstQuery()))
  }

  Query callToSetlocaleInvalidatesOldPointersMisraQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `callToSetlocaleInvalidatesOldPointersMisra` query
      TQueryCPP(TImportMisra23PackageQuery(TCallToSetlocaleInvalidatesOldPointersMisraQuery()))
  }

  Query callToSetlocaleInvalidatesOldPointersWarnMisraQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `callToSetlocaleInvalidatesOldPointersWarnMisra` query
      TQueryCPP(TImportMisra23PackageQuery(TCallToSetlocaleInvalidatesOldPointersWarnMisraQuery()))
  }

  Query objectUsedWhileInPotentiallyMovedFromStateQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `objectUsedWhileInPotentiallyMovedFromState` query
      TQueryCPP(TImportMisra23PackageQuery(TObjectUsedWhileInPotentiallyMovedFromStateQuery()))
  }

  Query readsAndWritesOnStreamNotSeparatedByPositioningQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `readsAndWritesOnStreamNotSeparatedByPositioning` query
      TQueryCPP(TImportMisra23PackageQuery(TReadsAndWritesOnStreamNotSeparatedByPositioningQuery()))
  }
}
